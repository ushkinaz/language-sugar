package baseLanguage.sugar.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class StringFormat extends Expression {
  public static final String concept = "baseLanguage.sugar.structure.StringFormat";
  public static final String STRING_FORMAT = "stringFormat";
  public static final String PARAMETERS = "parameters";

  public StringFormat(SNode node) {
    super(node);
  }

  public Expression getStringFormat() {
    return (Expression) this.getChild(Expression.class, StringFormat.STRING_FORMAT);
  }

  public void setStringFormat(Expression node) {
    super.setChild(StringFormat.STRING_FORMAT, node);
  }

  public int getParametersesCount() {
    return this.getChildCount(StringFormat.PARAMETERS);
  }

  public Iterator<Expression> parameterses() {
    return this.children(Expression.class, StringFormat.PARAMETERS);
  }

  public List<Expression> getParameterses() {
    return this.getChildren(Expression.class, StringFormat.PARAMETERS);
  }

  public void addParameters(Expression node) {
    this.addChild(StringFormat.PARAMETERS, node);
  }

  public void insertParameters(Expression prev, Expression node) {
    this.insertChild(prev, StringFormat.PARAMETERS, node);
  }

  public static StringFormat newInstance(SModel sm, boolean init) {
    return (StringFormat) SModelUtil_new.instantiateConceptDeclaration("baseLanguage.sugar.structure.StringFormat", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static StringFormat newInstance(SModel sm) {
    return StringFormat.newInstance(sm, false);
  }
}
